pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--8 main
t=0

-- suits
-- 0 = undef
-- 1 = hearts
-- 2 = diamonds
-- 3 = clubs
-- 4 = spades

-- values
-- 1 = A
-- 2...10 = 2...10
-- 11 = J
-- 12 = Q
-- 13 = K

lb={"a","2","3","4","5","6","7","8","9","10","j","q","k","jkr"}

function get_color(suit)
	if (suit==1 or suit==2) return 8
	if (suit==3 or suit==4) return 5
	return 12
end

function suit(ncard)
	if (ncard<=0) return 0
	if (ncard>=53) return 5
	return flr((ncard-1)/13)+1
end

function val(ncard)
	if (ncard==0) return 0
	if (ncard>=53) return 14
	return ((ncard-1)%13)+1
end

global=_ENV

class=setmetatable({
	new=function(self,tbl)
		tbl=tbl or {}
		setmetatable(tbl,{__index=self})
		return tbl
	end
},{__index=_ENV})

scard=class:new({
	ncard=5,
	x=0,y=0,sx=24,sy=24,
	print_card=function(card,xx,yy)
		if ncard<=0 then
			return
		end
		cx,cy=cursor()
		x=xx or cx
		y=yy or cy
		s=suit(ncard)
		v=val(ncard)
		c=get_color(s)
		l=lb[v]
		r=s
		if s==5 then
			r=5
			l=""
		end
		str=l
		w=#str*4
		print(l,x-w/2+1,y-6,c)
		spr(r,x-3,y)
	end,
	draw=function(_ENV)
		v=val(ncard)
		s=suit(ncard)
		rect(x+2,y,x+sx-3,y+sy-1,5)
		rect(x,y+2,x+sx-1,y+sy-3,5)
		rect(x+1,y+1,x+sx-2,y+sy-2,6)
		if ncard==0 then
		 rectfill(x+3,y+3,x+sx-4,y+sy-4,6)
		else
		 rectfill(x+3,y+3,x+sx-4,y+sy-4,7)
		 print_card(ncard,x+sx/2,y+sy/2)
		end
		n=-t*20
		if n<0 then n=0 end
		for a=1,n do
			rx=rnd(sx)+x
			ry=rnd(sy)+y
			pset(rx,ry,9)
		end
	end
})

dcard=class:new({
	ncard=5,
	state=0
})

deck=class:new({
	cards={},
	orig_count=0,
	new=function(self,tbl)
		tbl=class.new(self,tbl)
		for a=1,60 do
			card=dcard:new({ncard=a})
			add(self.cards,card)
		end
		self.orig_count=#self.cards
		for i=#self.cards, 2, -1 do
			local j = flr(rnd(i))
			self.cards[i], self.cards[j] = self.cards[j], self.cards[i]
		end		
		return tbl
	end,
	draw=function(_ENV)
		rectfill(0,120,127,123,1)
		local x=0
		for card in all(cards) do
			x+=2
			line(x,121,x,122,get_color(suit(card.ncard)))
		end
		print("current # "..#cards,0,0,7)
		print("orig # " .. orig_count,0,6,7)
	end
})

board=class:new({
	slots={},
	new=function(self,tbl)
		tbl=class.new(self,tbl)
		for a=1,9 do
			add(self.slots,scard:new({
				x=rnd(128),
				y=rnd(128),
				ncard=game_deck.cards[a].ncard
			}))
		end
		return tbl
	end,
	draw=function(_ENV)
		for slot in all(slots) do
			slot:draw()
		end
	end
})

function draw_playfield()
	cls(0)
	ptn=1+4+32+128
	ptn=ptn+(shl(ptn,8))
	fillp(ptn)
	rectfill(12,4,12+13*8,4+13*8,3)
	fillp(0)
	-- map(0,0,12,4,13,13)
end

function _draw()
	draw_playfield()
	t += 1
	game_deck:draw()
	game_board:draw()
end

game_deck=deck:new()
game_board=board:new()

-- draw functions

function get_random_card()
	if #deck==0 then
		return nil
	end
	r=flr(rnd(#deck))+1
	v=deck[r]
	del(deck,v) 
	return v
end

function is_flush(i1,i2)
	v1=val(i1)
	v2=val(i2)
	if v1==14 then return true,v2 end
	if v2==14 then return true,v1 end
	if v1==v2 then return true,v1 end
	return false,nil
end

function is_seq_up(i1,i2)
	v1=val(i1)
	v2=val(i2)
	if v1==14 and v2>1 then return true,v2-1,v2 end
	if v1<13 and v2==14 then return true,v1,v1+1 end
	if v2==v1+1 then return true,v1,v2 end
	return false,nil,nil
end

function is_seq_dn(i1,i2)
	v1=val(i1)
	v2=val(i2)
	if v1==14 and v2<13 then return true,v2+1,v2 end
	if v1>2 and v2==14 then return true,v1,v1-1 end
	if v1==v2+1 then return true,v1,v2 end
	return false,nil,nil
end

function get_meld(i)
	local j={}
	local c={}
	for a=1,3 do
		c[a]=board[i[a]]
		j[a]=val(board[i[a]])
	end
-- all jokers
	if j[1]==14 and j[2]==14 and j[3]==14 then
		return "all jokers",5000,8
	end
-- same value
	t12,v12=is_flush(c[1],c[2])
	t23,v23=is_flush(c[2],c[3])
	if t12 and t23 and v12==v23 then
		return "all "..lb[v12],v12*100,5
	end
-- seq up
	t12,v11,v12=is_seq_up(c[1],c[2])
	t23,v22,v23=is_seq_up(c[2],c[3])
	if t12 and t23 and v12==v22 then
		return "sequence up",500,5
	end
-- seq dn
	t12,v11,v12=is_seq_dn(c[1],c[2])
	t23,v22,v23=is_seq_dn(c[2],c[3])
	if t12 and t23 and v12==v22 then
		return "sequence down",500,5
	end
-- nothing
	return "nothing",0,0
end

__gfx__
00000000088088000008000000555000000500000444440000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888888800088800000555000005550004444444000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700888888800888880055050550055555004440444000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000088888008888888055000550555555500004440000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000088888000888880005050500050505000044400000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700008880000088800000050000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000800000008000000555000005550000044400000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000ccccc0000ccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000c00000d000ccc0000c000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cc000dd0000c0000c00000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ccc0ddd000000000c00000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cc000dd0000d0000c000c0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000c00000d000ddd0000c00cc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000ddddd0000c0ccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000014141414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0014141414141414141414151414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0014151511151515111515151414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0014151515151515151515151414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0014121513151215131512151414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0014151515151515151515151414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0014151511151515111515151414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0015151515151515151515151414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1415121513151215131512151514141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1500000000000000000000151414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1500151511151515111515151414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1415151515151515151515151414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1414141414141414141414141414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1414141414141414141414141414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1414141414141414141414141414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1414141414141414141414141414141400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0001000000000250500000026050000002605026050250502505023050220501f0501b05018050160501505015050000000000000000000000000000000000000000000000000000000000000000000000000000
