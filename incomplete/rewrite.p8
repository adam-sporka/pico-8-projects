pico-8 cartridge // http://www.pico-8.com
version 27
__lua__
function init_map()
 for x=0,15 do
  for y=0,15 do
   r=flr(rnd(8))
   if r>4 then
    mset(x,y,0)
   else
    mset(x,y,16+r)
   end
  end
 end
end

function sget_ext(sp,x,y)
 xx=(sp%16)*8
 yy=(flr(sp/16))*8
 return sget(xx+x,yy+y)
end

function get_spr(col)
 if col==8 then return 16+0 end
 if col==11 then return 16+1 end
 if col==12 then return 16+2 end
 if col==9 then return 16+3 end
 if col==5 then return 0 end
 return -1
end

function extract_rule(sp)
 rule={}
 rule["s"]={}
 rule["d"]={}
 for y=0,3 do
  rule["s"][y]={}
  rule["d"][y]={}
  for x=0,3 do
   src=get_spr(sget_ext(sp,x,y))
   dst=get_spr(sget_ext(sp,x,y+4))
   rule["s"][y][x]=src
   rule["d"][y][x]=dst
  end
 end
 return rule
end

function apply_rule_loc(rule,mx,my)
 passed=true
 for x=0,3 do
  for y=0,3 do
   if rule["s"][y][x]>-1 then
    if x+mx>=0 and y+my>=0 and
       x+mx<16 and y+my<16 then
     if rule["s"][y][x]!=mget(mx+x,my+y) then
      passed=false
     end
    else
     passed=false
    end
   end
  end
 end
 if passed then
  for x=0,3 do
   for y=0,3 do
    if rule["d"][y][x]>-1 then
     if mx+x>=0 and my+y>=0 then
      mset(mx+x,my+y+16,rule["d"][y][x])
     end
    end
   end
  end
 else
  -- mset(mx,my+16,mget(mx,my))
 end
end

function apply_rule(rule)
 for mx=-3,15 do
  for my=-3,15 do
   apply_rule_loc(rule,mx,my)
  end
 end
end

function save_map()
 for mx=0,15 do
  for my=0,15 do
   mset(mx,my+16,mget(mx,my))
  end
 end
end

function retrieve_map()
 for mx=0,15 do
  for my=0,15 do
   mset(mx,my,mget(mx,my+16))
  end
 end
end

function apply_rules()
 save_map()
 for r=32,36 do
  rule=extract_rule(r)
  apply_rule(rule)
 end
 retrieve_map()
end

function init_game()
 init_map()
end

function _init()
 init_game()
end

function _update()
 --apply_rules()
 r=0
 if btnp(0) then r=35 end
 if btnp(1) then r=33 end
 if btnp(2) then r=34 end
 if btnp(3) then r=32 end
 if btnp(4) then r=36 end
 if r!=0 then
  save_map()
  rule=extract_rule(r)
  apply_rule(rule)
  retrieve_map()
 end
end

function _draw()
 cls()
 map(0,0,0,0,16,16)
end

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00088000000bb0000c0cc0c009999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0088880000bbbb0000cccc0009900990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
088888800bb00bb00cccccc009000090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
088888800bb00bb00cccccc009000090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0088880000bbbb0000cccc0009900990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00088000000bb0000c0cc0c009999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c000000080000000000000000b000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
500000005800000090000000b5000000c90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c0000000000000005000000000000000b80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100001507000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
