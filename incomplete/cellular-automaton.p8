pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
x=1
y=1
rp={}
pt={}
--------------------------------
function ptset(r,x,y,v)
	if (pt[r]==nil) pt[r]={}
	if (pt[r][y]==nil) pt[r][y]={}
	pt[r][y][x]=v
end
--------------------------------
function ptget(r,x,y)
 if (pt[r]==nil) return nil
 if (pt[r][y]==nil) return nil
	return pt[r][y][x]
end
--------------------------------
function rpset(r,x,y,v)
	if (rp[r]==nil) rp[r]={}
	if (rp[r][y]==nil) rp[r][y]={}
	rp[r][y][x]=v
end
--------------------------------
function rpget(r,x,y)
 if (rp[r]==nil) return nil
 if (rp[r][y]==nil) return nil
	return rp[r][y][x]
end
--------------------------------
function init_level()
	for y=0,15 do
		for x=0,15 do
			mset(x,y,0)
		 if (x==0) mset(x,y,16)
		 if (x==15) mset(x,y,16)
		 if (y==0) mset(x,y,16)
		 if (y==15) mset(x,y,16)
		end
	end
end
--------------------------------
function add_rule_1()
	ptset(1,1,1,1)
	ptset(1,2,1,1)
	rpset(1,4,1,1)
end
function add_rule_22()	
	ptset(22,1,1,2)
	ptset(22,1,2,2)
	ptset(22,1,3,16)
	rpset(22,1,1,3)
	rpset(22,1,2,3)
end
function add_rule_2()	
	ptset(2,1,1,2)
	ptset(2,1,2,2)
	rpset(2,1,1,-1)
	rpset(2,1,3,2)
end
function add_rule_23()	
	ptset(23,1,2,3)
	ptset(23,1,3,3)
	rpset(23,1,1,3)
	rpset(23,1,3,-1)
end
function add_rule_24()	
	ptset(24,1,1,16)
	ptset(24,1,2,3)
	ptset(24,1,3,3)
	rpset(24,1,2,2)
	rpset(24,1,3,2)
end
function add_rule_3()	
	ptset(3,1,1,1)
	ptset(3,1,2,2)
	rpset(3,2,1,2)
	rpset(3,2,2,1)
end
function add_rule_4()	
	ptset(4,1,1,2)
	ptset(4,1,2,1)
	rpset(4,2,1,1)
	rpset(4,2,2,2)
end
--------------------------------
function reset_buffers()
	--reset the adds
	--reset the removes
	for x=0,15 do
		for y=0,15 do
			mset(x+16,y,0)
			mset(x+32,y,0)
		end
	end
end
--------------------------------
function init_rules()
	add_rule_1()
	add_rule_22()
	add_rule_23()
	add_rule_24()
	add_rule_2()
	add_rule_3()
	add_rule_4()
end
--------------------------------
function apply_rule(r)
	for y=0,15 do
		for x=0,15 do
			--check
			success=true
		 for j in pairs(pt[r]) do
		 	for i,val in pairs(pt[r][j]) do
		 		if val!=nil then
	 		 	if (mget(x+i-1,y+j-1)==val) then
			 		else
			 			success=false
			 		end
			 	end
		 	end
		 end
		 --apply
		 if (success) then
		 	for j in pairs(rp[r]) do
		 		for i,val in pairs(rp[r][j]) do
		 			if mget(x+i-1,y+j-1)!=16 then
		 				mset(x+i-1+16,y+j-1,val)
	 				end
		 		end
		 	end
		 end
		end
	end
end
--------------------------------
function copy_buffers()
	for y=0,15 do
		for x=0,15 do
			if (mget(x+16,y)>0) then
				mset(x,y,mget(x+16,y))
			end
			if (mget(x+16,y)==-1) then
				mset(x,y,0)
			end
		end
	end
end
--------------------------------
function step()
	reset_buffers()
	for r in pairs(pt) do
		apply_rule(r)
	end
	copy_buffers()
end
--------------------------------
function handle_keyboard()
	if btnp(2) then
		if (mget(x,y-1)!=16) y-=1
	end
	if btnp(3) then
		if (mget(x,y+1)!=16) y+=1
	end
	if btnp(0) then
		if (mget(x-1,y)!=16) x-=1
	end
	if btnp(1) then
		if (mget(x+1,y)!=16) x+=1
	end
	if btnp(4) then
		mset(x,y,(mget(x,y)+1)%4)
	end
	if btnp(5) then
		step()
	end
end
--------------------------------
function _init()
	cls()
	init_level()
	init_rules()
end
--------------------------------
function _draw()
	cls()
	map(0,0,0,0,16,16)
	rect(x*8,y*8,x*8+7,y*8+7,6)
end
--------------------------------
function _update()
	handle_keyboard()
end
__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000cccccc00eeeeee00bbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007000c0000c00e0000e00b0000b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770000c0000c00e0000e00b0000b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770000c0000c00e0000e00b0000b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007000c0000c00e0000e00b0000b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000cccccc00eeeeee00bbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100001a06019060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100002a0502a0502a0502c0502d050300500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
